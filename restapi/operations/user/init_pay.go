// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InitPayHandlerFunc turns a function with the right signature into a init pay handler
type InitPayHandlerFunc func(InitPayParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn InitPayHandlerFunc) Handle(params InitPayParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// InitPayHandler interface for that can handle valid init pay params
type InitPayHandler interface {
	Handle(InitPayParams, interface{}) middleware.Responder
}

// NewInitPay creates a new http.Handler for the init pay operation
func NewInitPay(ctx *middleware.Context, handler InitPayHandler) *InitPay {
	return &InitPay{Context: ctx, Handler: handler}
}

/*InitPay swagger:route POST /initiatePayment user initPay

To initiate payment

uses RazorPay

*/
type InitPay struct {
	Context *middleware.Context
	Handler InitPayHandler
}

func (o *InitPay) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewInitPayParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// InitPayOKBody init pay o k body
//
// swagger:model InitPayOKBody
type InitPayOKBody struct {

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this init pay o k body
func (o *InitPayOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InitPayOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InitPayOKBody) UnmarshalBinary(b []byte) error {
	var res InitPayOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
