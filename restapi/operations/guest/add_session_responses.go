// Code generated by go-swagger; DO NOT EDIT.

package guest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"e-food/models"
)

// AddSessionOKCode is the HTTP code returned for type AddSessionOK
const AddSessionOKCode int = 200

/*AddSessionOK Success response when item is added successfully

swagger:response addSessionOK
*/
type AddSessionOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewAddSessionOK creates AddSessionOK with default headers values
func NewAddSessionOK() *AddSessionOK {

	return &AddSessionOK{}
}

// WithPayload adds the payload to the add session o k response
func (o *AddSessionOK) WithPayload(payload *models.SuccessResponse) *AddSessionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add session o k response
func (o *AddSessionOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddSessionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddSessionBadRequestCode is the HTTP code returned for type AddSessionBadRequest
const AddSessionBadRequestCode int = 400

/*AddSessionBadRequest Bad Request

swagger:response addSessionBadRequest
*/
type AddSessionBadRequest struct {
}

// NewAddSessionBadRequest creates AddSessionBadRequest with default headers values
func NewAddSessionBadRequest() *AddSessionBadRequest {

	return &AddSessionBadRequest{}
}

// WriteResponse to the client
func (o *AddSessionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddSessionNotFoundCode is the HTTP code returned for type AddSessionNotFound
const AddSessionNotFoundCode int = 404

/*AddSessionNotFound Session ID Not Found

swagger:response addSessionNotFound
*/
type AddSessionNotFound struct {
}

// NewAddSessionNotFound creates AddSessionNotFound with default headers values
func NewAddSessionNotFound() *AddSessionNotFound {

	return &AddSessionNotFound{}
}

// WriteResponse to the client
func (o *AddSessionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// AddSessionInternalServerErrorCode is the HTTP code returned for type AddSessionInternalServerError
const AddSessionInternalServerErrorCode int = 500

/*AddSessionInternalServerError Server error

swagger:response addSessionInternalServerError
*/
type AddSessionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewAddSessionInternalServerError creates AddSessionInternalServerError with default headers values
func NewAddSessionInternalServerError() *AddSessionInternalServerError {

	return &AddSessionInternalServerError{}
}

// WithPayload adds the payload to the add session internal server error response
func (o *AddSessionInternalServerError) WithPayload(payload string) *AddSessionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add session internal server error response
func (o *AddSessionInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddSessionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
