// Code generated by go-swagger; DO NOT EDIT.

package cart

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "e-food/models"
)

// AddOKCode is the HTTP code returned for type AddOK
const AddOKCode int = 200

/*AddOK Success reponse when item is added successfully

swagger:response addOK
*/
type AddOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewAddOK creates AddOK with default headers values
func NewAddOK() *AddOK {

	return &AddOK{}
}

// WithPayload adds the payload to the add o k response
func (o *AddOK) WithPayload(payload *models.SuccessResponse) *AddOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add o k response
func (o *AddOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddBadRequestCode is the HTTP code returned for type AddBadRequest
const AddBadRequestCode int = 400

/*AddBadRequest Bad Request

swagger:response addBadRequest
*/
type AddBadRequest struct {
}

// NewAddBadRequest creates AddBadRequest with default headers values
func NewAddBadRequest() *AddBadRequest {

	return &AddBadRequest{}
}

// WriteResponse to the client
func (o *AddBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddNotFoundCode is the HTTP code returned for type AddNotFound
const AddNotFoundCode int = 404

/*AddNotFound Item to be added Not Found

swagger:response addNotFound
*/
type AddNotFound struct {
}

// NewAddNotFound creates AddNotFound with default headers values
func NewAddNotFound() *AddNotFound {

	return &AddNotFound{}
}

// WriteResponse to the client
func (o *AddNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// AddInternalServerErrorCode is the HTTP code returned for type AddInternalServerError
const AddInternalServerErrorCode int = 500

/*AddInternalServerError Server error

swagger:response addInternalServerError
*/
type AddInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewAddInternalServerError creates AddInternalServerError with default headers values
func NewAddInternalServerError() *AddInternalServerError {

	return &AddInternalServerError{}
}

// WithPayload adds the payload to the add internal server error response
func (o *AddInternalServerError) WithPayload(payload string) *AddInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add internal server error response
func (o *AddInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
