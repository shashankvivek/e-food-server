// Code generated by go-swagger; DO NOT EDIT.

package cart

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AddHandlerFunc turns a function with the right signature into a add handler
type AddHandlerFunc func(AddParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddHandlerFunc) Handle(params AddParams) middleware.Responder {
	return fn(params)
}

// AddHandler interface for that can handle valid add params
type AddHandler interface {
	Handle(AddParams) middleware.Responder
}

// NewAdd creates a new http.Handler for the add operation
func NewAdd(ctx *middleware.Context, handler AddHandler) *Add {
	return &Add{Context: ctx, Handler: handler}
}

/*Add swagger:route POST /cart cart add

This API adds product to cart / guest cart

*/
type Add struct {
	Context *middleware.Context
	Handler AddHandler
}

func (o *Add) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
