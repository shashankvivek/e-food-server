// Code generated by go-swagger; DO NOT EDIT.

package guest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AddItemHandlerFunc turns a function with the right signature into a add item handler
type AddItemHandlerFunc func(AddItemParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddItemHandlerFunc) Handle(params AddItemParams) middleware.Responder {
	return fn(params)
}

// AddItemHandler interface for that can handle valid add item params
type AddItemHandler interface {
	Handle(AddItemParams) middleware.Responder
}

// NewAddItem creates a new http.Handler for the add item operation
func NewAddItem(ctx *middleware.Context, handler AddItemHandler) *AddItem {
	return &AddItem{Context: ctx, Handler: handler}
}

/*AddItem swagger:route POST /guest/cart guest addItem

This API adds product to cart / guest cart

*/
type AddItem struct {
	Context *middleware.Context
	Handler AddItemHandler
}

func (o *AddItem) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddItemParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
