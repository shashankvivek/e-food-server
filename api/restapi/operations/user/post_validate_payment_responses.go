// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"e-food/api/models"
)

// PostValidatePaymentOKCode is the HTTP code returned for type PostValidatePaymentOK
const PostValidatePaymentOKCode int = 200

/*PostValidatePaymentOK Success response when payment is valid

swagger:response postValidatePaymentOK
*/
type PostValidatePaymentOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewPostValidatePaymentOK creates PostValidatePaymentOK with default headers values
func NewPostValidatePaymentOK() *PostValidatePaymentOK {

	return &PostValidatePaymentOK{}
}

// WithPayload adds the payload to the post validate payment o k response
func (o *PostValidatePaymentOK) WithPayload(payload *models.SuccessResponse) *PostValidatePaymentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post validate payment o k response
func (o *PostValidatePaymentOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostValidatePaymentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostValidatePaymentBadRequestCode is the HTTP code returned for type PostValidatePaymentBadRequest
const PostValidatePaymentBadRequestCode int = 400

/*PostValidatePaymentBadRequest Bad Request

swagger:response postValidatePaymentBadRequest
*/
type PostValidatePaymentBadRequest struct {
}

// NewPostValidatePaymentBadRequest creates PostValidatePaymentBadRequest with default headers values
func NewPostValidatePaymentBadRequest() *PostValidatePaymentBadRequest {

	return &PostValidatePaymentBadRequest{}
}

// WriteResponse to the client
func (o *PostValidatePaymentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// PostValidatePaymentNotFoundCode is the HTTP code returned for type PostValidatePaymentNotFound
const PostValidatePaymentNotFoundCode int = 404

/*PostValidatePaymentNotFound Item to be deleted Not Found

swagger:response postValidatePaymentNotFound
*/
type PostValidatePaymentNotFound struct {
}

// NewPostValidatePaymentNotFound creates PostValidatePaymentNotFound with default headers values
func NewPostValidatePaymentNotFound() *PostValidatePaymentNotFound {

	return &PostValidatePaymentNotFound{}
}

// WriteResponse to the client
func (o *PostValidatePaymentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// PostValidatePaymentInternalServerErrorCode is the HTTP code returned for type PostValidatePaymentInternalServerError
const PostValidatePaymentInternalServerErrorCode int = 500

/*PostValidatePaymentInternalServerError Server error

swagger:response postValidatePaymentInternalServerError
*/
type PostValidatePaymentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostValidatePaymentInternalServerError creates PostValidatePaymentInternalServerError with default headers values
func NewPostValidatePaymentInternalServerError() *PostValidatePaymentInternalServerError {

	return &PostValidatePaymentInternalServerError{}
}

// WithPayload adds the payload to the post validate payment internal server error response
func (o *PostValidatePaymentInternalServerError) WithPayload(payload string) *PostValidatePaymentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post validate payment internal server error response
func (o *PostValidatePaymentInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostValidatePaymentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
