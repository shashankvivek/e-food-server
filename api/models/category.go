// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Category category
//
// swagger:model Category
type Category struct {

	// bc Id
	BcID int64 `json:"bcId,omitempty"`

	// bc image Url
	BcImageURL string `json:"bcImageUrl,omitempty"`

	// bc is active
	BcIsActive bool `json:"bcIsActive,omitempty"`

	// bc name
	BcName string `json:"bcName,omitempty"`

	// sub categories
	SubCategories []*SubCategory `json:"subCategories"`
}

// Validate validates this category
func (m *Category) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubCategories(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Category) validateSubCategories(formats strfmt.Registry) error {

	if swag.IsZero(m.SubCategories) { // not required
		return nil
	}

	for i := 0; i < len(m.SubCategories); i++ {
		if swag.IsZero(m.SubCategories[i]) { // not required
			continue
		}

		if m.SubCategories[i] != nil {
			if err := m.SubCategories[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subCategories" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *Category) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Category) UnmarshalBinary(b []byte) error {
	var res Category
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
